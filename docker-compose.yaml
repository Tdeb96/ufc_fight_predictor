version: '3.9'

networks:
  default:
    name: ufc
    external: true

services:
  timescale:
    image: timescale/timescaledb-postgis:latest-pg13
    container_name: "timescale"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ufc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - type: bind
        source: ./ufc_fight_predictor/backend/config/servers.json
        target: /pgadmin4/servers.json
    ports:
      - "5050:80"

  add_data:
    build: 
      context: ./
      dockerfile: ./ufc_fight_predictor/data/Dockerfile
    depends_on:
      timescale:
        condition: service_healthy
    
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      add_data:
        condition: service_completed_successfully

  web_app:
    build:
      context: .
      dockerfile: ./web_app/Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      add_data:
        condition: service_completed_successfully

volumes:
  db:
    driver: local
